{
  "projectName": "test1247",
  "authorName": "kiduuur",
  "htmlContent": "<!DOCTYPE html>\n<html lang=\"zh-Hant\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>番茄鐘</title>\n    <!-- 引入 Tailwind CSS CDN -->\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n        /* 使用 Inter 字體 */\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');\n        body {\n            font-family: 'Inter', sans-serif;\n        }\n\n        /* 漸層背景 */\n        body {\n            background: linear-gradient(135deg, #1f2937, #111827);\n            min-height: 100vh;\n            color: #e5e7eb;\n        }\n\n        /* 圓形進度環的樣式 */\n        .progress-ring__circle {\n            transition: stroke-dashoffset 0.5s ease-in-out;\n        }\n\n        /* 按鈕在點擊時的視覺效果 */\n        button:active {\n            transform: scale(0.98);\n        }\n\n        /* 隱藏預設的數字輸入欄位箭頭 */\n        input[type=number]::-webkit-inner-spin-button,\n        input[type=number]::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            margin: 0;\n        }\n    </style>\n</head>\n<body class=\"flex flex-col items-center justify-center\">\n\n    <!-- 主應用程式容器 -->\n    <div class=\"bg-gray-800 p-8 rounded-3xl shadow-2xl w-full max-w-lg mx-4 text-center transform transition-all duration-300 hover:scale-105 my-8\">\n\n        <!-- 標題 -->\n        <h1 class=\"text-3xl sm:text-4xl font-bold mb-4 text-gray-100\">番茄鐘</h1>\n\n        <!-- 番茄數顯示 -->\n        <div class=\"text-sm text-gray-400 mb-6\">\n            已完成番茄數: <span id=\"pomodoroCount\" class=\"font-bold text-gray-200\">0</span>\n        </div>\n\n        <!-- 模式切換按鈕 -->\n        <div class=\"flex justify-center space-x-2 sm:space-x-4 mb-8\">\n            <button id=\"pomodoroBtn\" class=\"px-4 py-2 rounded-full font-bold transition-colors duration-300 bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 text-sm sm:text-base\">番茄時間</button>\n            <button id=\"shortBreakBtn\" class=\"px-4 py-2 rounded-full font-bold transition-colors duration-300 bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-400 text-sm sm:text-base\">短休息</button>\n            <button id=\"longBreakBtn\" class=\"px-4 py-2 rounded-full font-bold transition-colors duration-300 bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-400 text-sm sm:text-base\">長休息</button>\n        </div>\n\n        <!-- 圓形進度環和計時器 -->\n        <div class=\"relative w-64 h-64 sm:w-80 sm:h-80 mx-auto mb-8\">\n            <svg class=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 100 100\">\n                <!-- 進度環背景 -->\n                <circle class=\"text-gray-700\"\n                        stroke-width=\"8\"\n                        stroke=\"currentColor\"\n                        fill=\"transparent\"\n                        r=\"45\"\n                        cx=\"50\"\n                        cy=\"50\"/>\n                <!-- 進度環 -->\n                <circle id=\"progressCircle\"\n                        class=\"progress-ring__circle\"\n                        stroke-width=\"8\"\n                        stroke-linecap=\"round\"\n                        stroke=\"currentColor\"\n                        fill=\"transparent\"\n                        r=\"45\"\n                        cx=\"50\"\n                        cy=\"50\"/>\n            </svg>\n            <!-- 計時器顯示在進度環中心 -->\n            <div id=\"timer\" class=\"absolute inset-0 flex items-center justify-center text-5xl sm:text-6xl font-bold text-gray-100\">\n                25:00\n            </div>\n        </div>\n\n        <!-- 控制按鈕 -->\n        <div class=\"flex justify-center items-center space-x-4\">\n            <button id=\"startStopBtn\" class=\"bg-green-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-green-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-green-400 text-sm sm:text-base\">開始</button>\n            <button id=\"resetBtn\" class=\"bg-gray-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-gray-400 text-sm sm:text-base\">重設</button>\n            <button id=\"settingsBtn\" class=\"bg-gray-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-gray-400 text-sm sm:text-base\">設定</button>\n        </div>\n\n    </div>\n\n    <!-- 訊息提示框 -->\n    <div id=\"messageModal\" class=\"hidden fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 transition-opacity duration-300\">\n        <div class=\"bg-gray-800 p-6 rounded-lg shadow-xl text-center max-w-xs mx-auto\">\n            <p id=\"messageText\" class=\"text-lg font-semibold mb-4\"></p>\n            <button id=\"messageOkBtn\" class=\"bg-green-600 text-white px-6 py-2 rounded-full font-bold hover:bg-green-700 transition-colors duration-300\">好的</button>\n        </div>\n    </div>\n\n    <!-- 設定彈出式視窗 -->\n    <div id=\"settingsModal\" class=\"hidden fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 transition-opacity duration-300\">\n        <div class=\"bg-gray-800 p-8 rounded-lg shadow-xl w-full max-w-sm mx-4 transform scale-95 transition-transform duration-300\">\n            <h2 class=\"text-2xl font-bold mb-6 text-gray-100 text-center\">設定時間</h2>\n            <div class=\"space-y-4\">\n                <div class=\"flex items-center justify-between\">\n                    <label for=\"pomodoroInput\" class=\"text-gray-300\">番茄時間 (分鐘):</label>\n                    <input type=\"number\" id=\"pomodoroInput\" class=\"w-24 px-3 py-2 rounded-md bg-gray-700 border-2 border-gray-600 focus:border-red-500 focus:ring-red-500 transition-colors duration-300\" min=\"1\" max=\"60\" value=\"25\">\n                </div>\n                <div class=\"flex items-center justify-between\">\n                    <label for=\"shortBreakInput\" class=\"text-gray-300\">短休息 (分鐘):</label>\n                    <input type=\"number\" id=\"shortBreakInput\" class=\"w-24 px-3 py-2 rounded-md bg-gray-700 border-2 border-gray-600 focus:border-green-500 focus:ring-green-500 transition-colors duration-300\" min=\"1\" max=\"30\" value=\"5\">\n                </div>\n                <div class=\"flex items-center justify-between\">\n                    <label for=\"longBreakInput\" class=\"text-gray-300\">長休息 (分鐘):</label>\n                    <input type=\"number\" id=\"longBreakInput\" class=\"w-24 px-3 py-2 rounded-md bg-gray-700 border-2 border-gray-600 focus:border-blue-500 focus:ring-blue-500 transition-colors duration-300\" min=\"1\" max=\"60\" value=\"15\">\n                </div>\n            </div>\n            <div class=\"flex justify-center space-x-4 mt-8\">\n                <button id=\"saveSettingsBtn\" class=\"bg-red-600 text-white px-6 py-2 rounded-full font-bold hover:bg-red-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-red-400\">儲存</button>\n                <button id=\"cancelSettingsBtn\" class=\"bg-gray-600 text-white px-6 py-2 rounded-full font-bold hover:bg-gray-700 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-gray-400\">取消</button>\n            </div>\n        </div>\n    </div>\n\n\n    <script>\n        // 獲取 DOM 元素\n        const timerDisplay = document.getElementById('timer');\n        const progressCircle = document.getElementById('progressCircle');\n        const startStopBtn = document.getElementById('startStopBtn');\n        const resetBtn = document.getElementById('resetBtn');\n        const settingsBtn = document.getElementById('settingsBtn');\n        const pomodoroBtn = document.getElementById('pomodoroBtn');\n        const shortBreakBtn = document.getElementById('shortBreakBtn');\n        const longBreakBtn = document.getElementById('longBreakBtn');\n        const pomodoroCountDisplay = document.getElementById('pomodoroCount');\n\n        const settingsModal = document.getElementById('settingsModal');\n        const saveSettingsBtn = document.getElementById('saveSettingsBtn');\n        const cancelSettingsBtn = document.getElementById('cancelSettingsBtn');\n        const pomodoroInput = document.getElementById('pomodoroInput');\n        const shortBreakInput = document.getElementById('shortBreakInput');\n        const longBreakInput = document.getElementById('longBreakInput');\n\n        const messageModal = document.getElementById('messageModal');\n        const messageText = document.getElementById('messageText');\n        const messageOkBtn = document.getElementById('messageOkBtn');\n\n        // 定義圓形進度環的半徑和周長\n        const radius = 45;\n        const circumference = 2 * Math.PI * radius;\n        progressCircle.style.strokeDasharray = circumference;\n\n        // 定義計時器模式和時間（以秒為單位）\n        const modes = {\n            pomodoro: { time: 25 * 60, progressColor: '#ef4444', btnColor: 'bg-red-600', bodyClass: 'pomodoro-mode' },\n            shortBreak: { time: 5 * 60, progressColor: '#22c55e', btnColor: 'bg-green-600', bodyClass: 'short-break-mode' },\n            longBreak: { time: 15 * 60, progressColor: '#3b82f6', btnColor: 'bg-blue-600', bodyClass: 'long-break-mode' }\n        };\n\n        let currentMode = 'pomodoro';\n        let remainingTime = modes[currentMode].time;\n        let totalTime = modes[currentMode].time;\n        let timerInterval = null;\n        let isPaused = true;\n        let pomodoroCount = 0;\n\n        // 顯示訊息框（取代 alert）\n        function showMessage(text) {\n            messageText.textContent = text;\n            messageModal.classList.remove('hidden');\n        }\n\n        // 播放提醒聲\n        function playAlarm() {\n            try {\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n                const oscillator = audioContext.createOscillator();\n                const gainNode = audioContext.createGain();\n\n                oscillator.type = 'sine'; // 正弦波\n                oscillator.frequency.setValueAtTime(440, audioContext.currentTime); // A4 音\n                gainNode.gain.setValueAtTime(0.5, audioContext.currentTime);\n\n                oscillator.connect(gainNode);\n                gainNode.connect(audioContext.destination);\n\n                oscillator.start();\n                gainNode.gain.exponentialRampToValueAtTime(0.00001, audioContext.currentTime + 1); // 淡出\n                oscillator.stop(audioContext.currentTime + 1);\n            } catch (e) {\n                console.error('無法播放提醒聲:', e);\n            }\n        }\n\n        // 更新計時器顯示、進度環和標籤\n        function updateDisplay() {\n            const minutes = Math.floor(remainingTime / 60).toString().padStart(2, '0');\n            const seconds = (remainingTime % 60).toString().padStart(2, '0');\n            const timeString = `${minutes}:${seconds}`;\n            timerDisplay.textContent = timeString;\n\n            // 更新瀏覽器標籤\n            document.title = `${timeString} - 番茄鐘`;\n\n            // 更新進度環\n            const progress = remainingTime / totalTime;\n            const dashOffset = circumference * (1 - progress);\n            progressCircle.style.strokeDashoffset = dashOffset;\n        }\n\n        // 開始或暫停計時器\n        function startStopTimer() {\n            if (isPaused) {\n                isPaused = false;\n                startStopBtn.textContent = '暫停';\n                startStopBtn.classList.remove('bg-green-600');\n                startStopBtn.classList.add('bg-orange-600', 'hover:bg-orange-700');\n                timerInterval = setInterval(() => {\n                    remainingTime--;\n                    updateDisplay();\n\n                    if (remainingTime < 0) {\n                        clearInterval(timerInterval);\n                        playAlarm();\n                        showMessage('時間到！該進行休息或下一個番茄時間了。');\n                        // 自動切換到下一個模式\n                        if (currentMode === 'pomodoro') {\n                            pomodoroCount++;\n                            pomodoroCountDisplay.textContent = pomodoroCount;\n                            switchMode('shortBreak');\n                        } else {\n                            switchMode('pomodoro');\n                        }\n                        isPaused = true;\n                        startStopBtn.textContent = '開始';\n                        startStopBtn.classList.remove('bg-orange-600');\n                        startStopBtn.classList.add('bg-green-600', 'hover:bg-green-700');\n                    }\n                }, 1000);\n            } else {\n                isPaused = true;\n                startStopBtn.textContent = '開始';\n                startStopBtn.classList.remove('bg-orange-600');\n                startStopBtn.classList.add('bg-green-600', 'hover:bg-green-700');\n                clearInterval(timerInterval);\n            }\n        }\n\n        // 重設計時器\n        function resetTimer() {\n            clearInterval(timerInterval);\n            isPaused = true;\n            startStopBtn.textContent = '開始';\n            startStopBtn.classList.remove('bg-orange-600');\n            startStopBtn.classList.add('bg-green-600', 'hover:bg-green-700');\n            remainingTime = modes[currentMode].time;\n            totalTime = modes[currentMode].time;\n            updateDisplay();\n        }\n\n        // 切換模式\n        function switchMode(mode) {\n            currentMode = mode;\n            resetTimer();\n\n            // 更新按鈕樣式\n            const allButtons = [pomodoroBtn, shortBreakBtn, longBreakBtn];\n            allButtons.forEach(btn => {\n                btn.classList.remove(modes.pomodoro.btnColor, modes.shortBreak.btnColor, modes.longBreak.btnColor);\n                btn.classList.add('bg-gray-600', 'hover:bg-gray-700');\n            });\n            const activeBtn = document.getElementById(`${mode}Btn`);\n            activeBtn.classList.remove('bg-gray-600', 'hover:bg-gray-700');\n            activeBtn.classList.add(modes[mode].btnColor);\n\n            // 更新進度環顏色\n            progressCircle.style.stroke = modes[mode].progressColor;\n        }\n\n        // 開啟設定彈出式視窗\n        function openSettings() {\n            // 載入當前值到輸入欄位\n            pomodoroInput.value = modes.pomodoro.time / 60;\n            shortBreakInput.value = modes.shortBreak.time / 60;\n            longBreakInput.value = modes.longBreak.time / 60;\n            settingsModal.classList.remove('hidden');\n            setTimeout(() => settingsModal.firstElementChild.classList.remove('scale-95'), 10);\n        }\n\n        // 儲存設定並關閉視窗\n        function saveSettings() {\n            const newPomodoroTime = parseInt(pomodoroInput.value) * 60;\n            const newShortBreakTime = parseInt(shortBreakInput.value) * 60;\n            const newLongBreakTime = parseInt(longBreakInput.value) * 60;\n\n            if (isNaN(newPomodoroTime) || isNaN(newShortBreakTime) || isNaN(newLongBreakTime) || newPomodoroTime <= 0 || newShortBreakTime <= 0 || newLongBreakTime <= 0) {\n                 showMessage('請輸入有效時間。');\n                 return;\n            }\n\n            modes.pomodoro.time = newPomodoroTime;\n            modes.shortBreak.time = newShortBreakTime;\n            modes.longBreak.time = newLongBreakTime;\n\n            closeSettings();\n            resetTimer();\n        }\n\n        // 關閉設定彈出式視窗\n        function closeSettings() {\n            settingsModal.firstElementChild.classList.add('scale-95');\n            setTimeout(() => settingsModal.classList.add('hidden'), 300);\n        }\n\n        // 添加事件監聽器\n        startStopBtn.addEventListener('click', startStopTimer);\n        resetBtn.addEventListener('click', resetTimer);\n        settingsBtn.addEventListener('click', openSettings);\n        pomodoroBtn.addEventListener('click', () => switchMode('pomodoro'));\n        shortBreakBtn.addEventListener('click', () => switchMode('shortBreak'));\n        longBreakBtn.addEventListener('click', () => switchMode('longBreak'));\n        saveSettingsBtn.addEventListener('click', saveSettings);\n        cancelSettingsBtn.addEventListener('click', closeSettings);\n        messageOkBtn.addEventListener('click', () => messageModal.classList.add('hidden'));\n\n        // 初始設定\n        switchMode('pomodoro');\n    </script>\n</body>\n</html>\n",
  "createdAt": "2025-08-27T12:27:27.739Z"
}